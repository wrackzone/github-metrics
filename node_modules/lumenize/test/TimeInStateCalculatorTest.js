// Generated by CoffeeScript 1.7.1
(function() {
  var Time, TimeInStateCalculator, lumenize;

  lumenize = require('../');

  TimeInStateCalculator = lumenize.TimeInStateCalculator;

  Time = require('tztime').Time;

  exports.TimeInStateCalculatorTest = {
    testBasic: function(test) {
      var config, endBefore, expected, granularity, savedState, snapshots, startOn, tisc, tisc2, tz;
      snapshots = [
        {
          id: 1,
          from: '2011-01-06T15:10:00.000Z',
          to: '2011-01-06T15:20:00.000Z',
          Name: '1.0'
        }, {
          id: 2,
          from: '2011-01-06T15:50:00.000Z',
          to: '2011-01-06T16:10:00.000Z',
          Name: '2.0'
        }, {
          id: 3,
          from: '2011-01-07T13:00:00.000Z',
          to: '2011-01-07T15:30:00.000Z',
          Name: '3.0'
        }, {
          id: 4,
          from: '2011-01-06T16:20:00.000Z',
          to: '2011-01-06T19:00:00.000Z',
          Name: '4.0'
        }, {
          id: 5,
          from: '2011-01-06T16:35:00.000Z',
          to: '2011-01-07T15:25:00.000Z',
          Name: '5.0'
        }, {
          id: 6,
          from: '2011-01-06T16:35:00.000Z',
          to: '2011-01-07T15:05:00.000Z',
          Name: '6.0'
        }, {
          id: 6,
          from: '2011-01-07T16:35:00.000Z',
          to: '2011-01-10T15:05:00.000Z',
          Name: '6.1'
        }, {
          id: 7,
          from: '2011-01-06T16:40:00.000Z',
          to: '9999-01-01T00:00:00.000Z',
          Name: '7.0'
        }
      ];
      granularity = Time.MINUTE;
      tz = 'America/Chicago';
      config = {
        granularity: granularity,
        tz: tz,
        workDayStartOn: {
          hour: 9,
          minute: 0
        },
        workDayEndBefore: {
          hour: 11,
          minute: 0
        },
        validFromField: 'from',
        validToField: 'to',
        uniqueIDField: 'id',
        trackLastValueForTheseFields: ['to', 'Name']
      };
      startOn = '2011-01-05T00:00:00.000Z';
      endBefore = '2011-01-11T00:00:00.000Z';
      tisc = new TimeInStateCalculator(config);
      tisc.addSnapshots(snapshots, startOn, endBefore);
      expected = [
        {
          id: 1,
          ticks: 10,
          to_lastValue: '2011-01-06T15:20:00.000Z',
          Name_lastValue: '1.0'
        }, {
          id: 2,
          ticks: 20,
          to_lastValue: '2011-01-06T16:10:00.000Z',
          Name_lastValue: '2.0'
        }, {
          id: 3,
          ticks: 30,
          to_lastValue: '2011-01-07T15:30:00.000Z',
          Name_lastValue: '3.0'
        }, {
          id: 4,
          ticks: 40,
          to_lastValue: '2011-01-06T19:00:00.000Z',
          Name_lastValue: '4.0'
        }, {
          id: 5,
          ticks: 50,
          to_lastValue: '2011-01-07T15:25:00.000Z',
          Name_lastValue: '5.0'
        }, {
          id: 6,
          ticks: 60,
          to_lastValue: '2011-01-10T15:05:00.000Z',
          Name_lastValue: '6.1'
        }, {
          id: 7,
          ticks: 260,
          to_lastValue: '9999-01-01T00:00:00.000Z',
          Name_lastValue: '7.0'
        }
      ];
      test.deepEqual(tisc.getResults(), expected);
      savedState = tisc.getStateForSaving({
        somekey: 'some value'
      });
      snapshots = [
        {
          id: 7,
          from: '2011-01-06T16:40:00.000Z',
          to: '9999-01-01T00:00:00.000Z',
          Name: '7.1'
        }, {
          id: 3,
          from: '2011-01-11T15:00:00.000Z',
          to: '2011-01-11T15:20:00.000Z',
          Name: '3.1'
        }, {
          id: 8,
          from: '2011-01-11T15:00:00.000Z',
          to: '9999-01-01T00:00:00.000Z',
          Name: '8.0'
        }
      ];
      startOn = '2011-01-11T00:00:00.000Z';
      endBefore = '2011-01-11T15:20:00.000Z';
      tisc.addSnapshots(snapshots, startOn, endBefore);
      expected = [
        {
          id: 1,
          ticks: 10,
          to_lastValue: '2011-01-06T15:20:00.000Z',
          Name_lastValue: '1.0'
        }, {
          id: 2,
          ticks: 20,
          to_lastValue: '2011-01-06T16:10:00.000Z',
          Name_lastValue: '2.0'
        }, {
          id: 3,
          ticks: 50,
          to_lastValue: '2011-01-11T15:20:00.000Z',
          Name_lastValue: '3.1'
        }, {
          id: 4,
          ticks: 40,
          to_lastValue: '2011-01-06T19:00:00.000Z',
          Name_lastValue: '4.0'
        }, {
          id: 5,
          ticks: 50,
          to_lastValue: '2011-01-07T15:25:00.000Z',
          Name_lastValue: '5.0'
        }, {
          id: 6,
          ticks: 60,
          to_lastValue: '2011-01-10T15:05:00.000Z',
          Name_lastValue: '6.1'
        }, {
          id: 7,
          ticks: 280,
          to_lastValue: '9999-01-01T00:00:00.000Z',
          Name_lastValue: '7.1'
        }, {
          id: 8,
          ticks: 20,
          to_lastValue: '9999-01-01T00:00:00.000Z',
          Name_lastValue: '8.0'
        }
      ];
      test.deepEqual(tisc.getResults(), expected);
      tisc2 = TimeInStateCalculator.newFromSavedState(savedState);
      test.deepEqual(tisc2.meta.somekey, 'some value');
      tisc2.addSnapshots(snapshots, startOn, endBefore);
      test.deepEqual(tisc.getResults(), tisc2.getResults());
      return test.done();
    }
  };

}).call(this);
